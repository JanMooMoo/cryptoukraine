[{"C:\\Users\\jfpad\\UkraineEth\\src\\index.js":"1","C:\\Users\\jfpad\\UkraineEth\\src\\reportWebVitals.js":"2","C:\\Users\\jfpad\\UkraineEth\\src\\App.js":"3","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\UkraineGOV_BTC.js":"4","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\Navbar.js":"5","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\UkraineDAO.js":"6","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\Unchained.js":"7","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\UkraineGOV.js":"8","C:\\Users\\jfpad\\UkraineEth\\src\\USDT.js":"9","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\Relief.js":"10","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\Binance.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":3135,"mtime":1646425738336,"results":"15","hashOfConfig":"13"},{"size":7721,"mtime":1646270258162,"results":"16","hashOfConfig":"13"},{"size":485,"mtime":1646314730388,"results":"17","hashOfConfig":"13"},{"size":7244,"mtime":1646426148054,"results":"18","hashOfConfig":"13"},{"size":5385,"mtime":1646423853950,"results":"19","hashOfConfig":"13"},{"size":11521,"mtime":1646270218318,"results":"20","hashOfConfig":"13"},{"size":7177,"mtime":1645931705890,"results":"21","hashOfConfig":"13"},{"size":7671,"mtime":1646423894337,"results":"22","hashOfConfig":"13"},{"size":7055,"mtime":1646426032752,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"sb2560",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jfpad\\UkraineEth\\src\\index.js",[],["51","52"],"C:\\Users\\jfpad\\UkraineEth\\src\\reportWebVitals.js",[],"C:\\Users\\jfpad\\UkraineEth\\src\\App.js",["53","54","55"],"C:\\Users\\jfpad\\UkraineEth\\src\\Components\\UkraineGOV_BTC.js",["56","57","58","59"],"import React, { Component } from 'react';\r\nimport AnimatedNumber from 'react-animated-number';\r\nimport ukraineGovLogo from '../UkraineGov.jpg';\r\n\r\nimport {usdt_address, usdt_abi} from '../USDT';\r\n\r\n\r\n\r\nlet Web3 = require('web3');\r\nconst web3 = new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/fdcf7b76a5e04f598a89724994743046\"))\r\n\r\nlet numeral = require('numeral');\r\n\r\n\r\nclass UkraineGOV_BTC extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n          btcBalance:0,\r\n          tether:0,\r\n          blockNumber:0,\r\n          dollarPerbtc:0,\r\n          dollarValue:0,\r\n          \r\n\r\n          txUSDT:[],\r\n          spentBTC:0,\r\n          totalBTC:0,\r\n          totalDonation:0,\r\n\r\n\r\n          prevState:0,\r\n          prevBtc:0,\r\n          prevUSDT:0,\r\n          \r\n        }\r\n    }\r\n    \r\n\r\nasync loadBalance(){\r\n    this.setState({prevBtc:this.state.btcBalance,prevUSDT:this.state.tether,prevState:this.state.dollarValue},()=>console.log)\r\n\r\n    fetch('https://api.blockcypher.com/v1/btc/main/addrs/357a3So9CbsNfBBgFYACGvxxS6tMaDoa1P/balance?token=37487b0d2f00402caa6165ceac46d0f8')\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n            //console.log(data)\r\n\r\n      this.setState({btcBalance:data.balance/100000000, spentBTC:data.total_sent/100000000,totalBTC:data.total_received/100000000},()=>console.log()) \r\n      //this.setState({dollarValue:this.state.dollarPerbtc * this.state.btcBalance},()=>console.log())\r\n      //this.setState({totalDonation:parseInt(this.state.dollarPerbtc) * parseInt(this.state.totalBTC)},()=>console.log()) \r\n     \r\n      setInterval(()=>this.total(),2000);\r\n      this.handleBtc();\r\n       \r\n    }\r\n    \r\n      )\r\n    .catch(console.log)\r\n   // if(this.state.totalDonation!== 0){\r\n   // this.setState({dollarValue:this.state.dollarPerbtc * this.state.btcBalance},()=>console.log())\r\n    //this.setState({totalDonation:parseInt(this.state.dollarPerbtc) * parseInt(this.state.totalBTC)},()=>console.log()) \r\n   // setInterval(()=>this.total(),5000);\r\n   \r\n  \r\n   // }\r\n}\r\n\r\n\r\ngetDollarValue(){\r\n\r\nfetch('https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd')\r\n        .then(res => res.json())\r\n            .then((data) => {               \r\n                this.setState({dollarPerbtc: data.bitcoin.usd},()=>console.log())\r\n               \r\n            }               \r\n              )\r\n              .catch(console.log)\r\n              setInterval(()=>this.loadBalance(),60000)\r\n\r\n}  \r\ntotal(){\r\n    this.setState({dollarValue:this.state.dollarPerbtc * this.state.btcBalance},()=>console.log())\r\n    this.setState({totalDonation:parseInt(this.state.dollarPerbtc) * parseInt(this.state.totalBTC)},()=>console.log()) \r\n    this.handleBtc();\r\n   // console.log(this.state.totalDonation)\r\n}\r\n\r\n\r\nhandleBtc = e => {\r\n    // if (this.props.onChange) {\r\n        this.props.onChange(this.state);\r\n               \r\n    };\r\n\r\n\r\n\r\n\r\nround(value){\r\n    if (value){  \r\n        return numeral(this.state.btcBalance).format('0,0.0000');        \r\n        }\r\n        \r\n    return 0;\r\n    }\r\n\r\n\r\nroundDollar(value){\r\n        if (value){  \r\n            return numeral(this.state.dollarValue).format('0,0.');      \r\n            }\r\n            \r\n        return 0;\r\n        }\r\n\r\nroundUsdt(value){\r\n    if (value){  \r\n         return numeral(this.state.tether).format('0,0.');      \r\n         }\r\n                \r\n    return 0;\r\n    }\r\n    \r\n\r\n    \r\n    render() {\r\n\r\n        let fontColor = 'rgb(240, 243, 237)';\r\n        if(this.state.prevBtc < this.state.btcBalance && this.state.prevBtc !== 0){\r\n            fontColor = 'rgb(117, 202, 47)';\r\n        }\r\n        else if(this.state.prevBtc > this.state.btcBalance){\r\n            fontColor = 'rgba(230, 26, 60)';\r\n        }\r\n        else{\r\n            fontColor = 'rgb(240, 243, 237)';\r\n        }\r\n\r\n\r\n\r\n        let fontColor2 = 'rgb(240, 243, 237)';\r\n        if(this.state.prevState < this.state.dollarValue && this.state.prevBtc !== 0){\r\n            fontColor2 = 'rgb(117, 202, 47)';\r\n        }\r\n        else if(this.state.prevState > this.state.dollarValue){\r\n            fontColor2 = 'rgba(230, 26, 60)';\r\n        }\r\n        else{\r\n            fontColor2 = 'rgb(240, 243, 237)';\r\n        }\r\n\r\n\r\n\r\n        let fontColor3 = 'rgb(154, 236, 87)';\r\n        if(this.state.prevUSDT < this.state.tether){\r\n            fontColor3 = 'rgb(117, 202, 47)';\r\n        }\r\n        else if(this.state.prevUSDT > this.state.tether){\r\n            fontColor3 = 'rgba(230, 26, 60)';\r\n        }\r\n        else{\r\n            fontColor3 = 'rgb(240, 243, 237)';\r\n        }\r\n\r\n\r\n\r\n        let btc =<p>Bitcoin Balance: <AnimatedNumber component=\"text\" value={this.state.btcBalance} style={{\r\n            transition: '0.1s ease-out',\r\n            fontSize: 19,\r\n            cursor:'pointer',\r\n            transitionProperty:\r\n            'background-color, color, opacity'\r\n        }}frameStyle={perc => (\r\n            perc === 100 ? {} : {color: fontColor}\r\n        )}\r\n        duration={1500}\r\n        formatValue={n=>this.round(n)}></AnimatedNumber> BTC</p>;\r\n\r\n        \r\n        let usdt = <p>USDT: $<AnimatedNumber component=\"text\" value={this.state.dollarValue} style={{\r\n            transition: '0.1s ease-out',\r\n            fontSize: 19,\r\n            cursor:'pointer',\r\n            transitionProperty:\r\n            'background-color, color, opacity'\r\n        }}frameStyle={perc => (\r\n            perc === 100 ? {} : {color: fontColor3}\r\n        )}\r\n        duration={1500}\r\n        formatValue={n=>this.roundUsdt(n)}></AnimatedNumber> </p>;\r\n        \r\n        \r\n        \r\n        let dollar = <p>Current Donation Value: $<AnimatedNumber component=\"text\" value={this.state.dollarValue} style={{\r\n            transition: '0.1s ease-out',\r\n            fontSize: 19,\r\n            cursor:'pointer',\r\n            transitionProperty:\r\n            'background-color, color, opacity'\r\n        }}frameStyle={perc => (\r\n            perc === 100 ? {} : {color: fontColor2}\r\n        )}\r\n        duration={1500}\r\n        formatValue={n=>this.roundDollar(n)}></AnimatedNumber> </p>;\r\n\r\n\r\n        let links= <div><a href=\"https://www.blockchain.com/btc/address/357a3So9CbsNfBBgFYACGvxxS6tMaDoa1P\" target =\"blank\"> Moved:  {numeral(this.state.spentBTC).format('0,0.0000')} BTC</a>\r\n              <div> <a href=\"https://www.blockchain.com/btc/address/357a3So9CbsNfBBgFYACGvxxS6tMaDoa1P\"target =\"blank\">Total Donated Value: ${numeral(this.state.totalDonation).format('0,0.')}</a></div></div>;\r\n\r\n    \r\n  \r\n      \r\n        return (\r\n            <div className='cards'>\r\n                <div className=\"title\">\r\n                <img className=\"daoLogo\" src={ukraineGovLogo} border={1} alt=\"UkraineDAO\" ></img>\r\n\r\n               <h3>Government of Ukraine</h3>\r\n               \r\n               </div>\r\n               <div>Website: <a href=\"https://twitter.com/Ukraine/status/1497594592438497282\" target =\"blank\">https://twitter.com/Ukraine</a></div>\r\n               <h4>Bitcoin Wallet: <a href=\"https://www.blockchain.com/btc/address/357a3So9CbsNfBBgFYACGvxxS6tMaDoa1P\" target =\"blank\">357a3So9CbsNfBBgFYACGvxxS6tMaDoa1P</a></h4>\r\n               {btc}\r\n               {dollar}\r\n               {links}\r\n              \r\n\r\n               <div className=\"foot\">\r\n                <h4>The government of Ukraine is now accepting cryptocurrency donations. Bitcoin, Ethereum & USDT.</h4>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true; \r\n        this.getDollarValue();\r\n        this.loadBalance();      \r\n       // this.getLogo();\r\n                  \r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default UkraineGOV_BTC;","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\Navbar.js",["60"],"import React, { Component } from 'react';\r\nimport Flag from '../flag2.png';\r\nimport Artist from '../artist.jpg';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div className='navbar-border'>\r\n                 <div className='navbar'>\r\n                 <img className=\"navLogo\" src={Artist} border={1} alt=\"Ditto logo\" ></img>\r\n                \r\n               </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\UkraineDAO.js",[],"C:\\Users\\jfpad\\UkraineEth\\src\\Components\\Unchained.js",["61"],"import React, { Component } from 'react';\r\nimport AnimatedNumber from 'react-animated-number';\r\nimport unchainLogo from '../unchained.jpg';\r\n\r\nimport * as nearAPI from \"near-api-js\";\r\n\r\n\r\nlet numeral = require('numeral');\r\n\r\n\r\nclass Unchained extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n          nearBalance:0,\r\n          wethBalance:0,\r\n          bloackNumber:0,\r\n          dollarPerNear:0,\r\n          dollarValue:0,\r\n\r\n          prevState:0,\r\n          prevNear:0,\r\n          prevUSDT:0,\r\n        }\r\n    }\r\n    \r\n\r\nasync loadBalance(){\r\n    this.setState({prevNear:this.state.nearBalance,prevState:this.state.dollarValue},()=>console.log)\r\n\r\n    const { keyStores } = nearAPI;\r\n    const keyStore = new keyStores.BrowserLocalStorageKeyStore();\r\n    const { connect } = nearAPI;\r\n\r\n\r\nconst config = {\r\n  networkId: \"mainnet\",\r\n  nodeUrl: \"https://rpc.mainnet.near.org\",\r\n  deps: {\r\n    keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),\r\n  },\r\n};\r\nconst near = await connect(config);\r\nconst response = await near.connection.provider.query({\r\n    request_type: \"view_account\",\r\n    finality: \"final\",\r\n    account_id: \"unchain-fund.sputnik-dao.near\",\r\n  });\r\n this.setState({nearBalance:response.amount/1000000000000000000000000},()=>console.log())\r\n this.setState({dollarValue:this.state.dollarPerNear * this.state.nearBalance},()=>console.log())\r\n setInterval(()=>this.loadBalance(),15000)\r\n this.handleUnchain()\r\n    }\r\n\r\n\r\ngetDollarValue(){\r\n\r\nfetch('https://api.coingecko.com/api/v3/simple/price?ids=near&vs_currencies=usd')\r\n        .then(res => res.json())\r\n            .then((data) => {          \r\n                this.setState({dollarPerNear: data.near.usd},()=>console.log())\r\n                this.loadBalance()\r\n\r\n            }               \r\n              )\r\n              .catch(console.log)\r\n}  \r\n\r\n\r\n\r\nhandleUnchain = e => {\r\n    // if (this.props.onChange) {\r\n     this.props.onChange(this.state);\r\n           \r\n   };\r\n\r\n\r\nround(value){\r\n    if (value){  \r\n        return numeral(this.state.nearBalance).format('0,0.0000');        \r\n        }\r\n        \r\n    return 0;\r\n    }\r\n\r\n\r\n    roundDollar(value){\r\n        if (value){  \r\n            return numeral(this.state.dollarValue).format('0,0.');      \r\n            }\r\n            \r\n        return 0;\r\n        }\r\n\r\n    \r\n    render() {\r\n\r\n        let fontColor = 'rgb(154, 236, 87)';\r\n        if(this.state.prevNear < this.state.nearBalance && this.state.prevNear !== 0){\r\n            fontColor = 'rgb(117, 202, 47)';\r\n        }\r\n        else if(this.state.prevNear > this.state.nearBalance){\r\n            fontColor = 'rgba(230, 26, 60)';\r\n        }\r\n        else{\r\n            fontColor = 'rgb(240, 243, 237)';\r\n        }\r\n\r\n\r\n\r\n        let fontColor2 = 'rgb(154, 236, 87)';\r\n        if(this.state.prevState < this.state.dollarValue && this.state.prevState !== 0){\r\n            fontColor2 = 'rgb(117, 202, 47)';\r\n        }\r\n        else if(this.state.prevState > this.state.dollarValue){\r\n            fontColor2 = 'rgba(230, 26, 60)';\r\n        }\r\n        else{\r\n            fontColor2 = 'rgb(240, 243, 237)';\r\n        }\r\n\r\n\r\n        let eth =<p>Near Balance: <AnimatedNumber component=\"text\" value={this.state.nearBalance} style={{\r\n            transition: '0.1s ease-out',\r\n            fontSize: 19,\r\n            cursor:'pointer',\r\n            transitionProperty:\r\n            'background-color, color, opacity'\r\n        }}frameStyle={perc => (\r\n            perc === 100 ? {} : {color: fontColor}\r\n        )}\r\n        duration={1500}\r\n        formatValue={n=>this.round(n)}></AnimatedNumber> NEAR</p>;\r\n\r\n        \r\n        \r\n        let dollar = <p>Total Donated Value: $<AnimatedNumber component=\"text\" value={this.state.dollarValue} style={{\r\n            transition: '0.1s ease-out',\r\n            fontSize: 19,\r\n            cursor:'pointer',\r\n            transitionProperty:\r\n            'background-color, color, opacity'\r\n        }}frameStyle={perc => (\r\n            perc === 100 ? {} : {color: fontColor2}\r\n        )}\r\n        duration={1500}\r\n        formatValue={n=>this.roundDollar(n)}></AnimatedNumber> </p>;\r\n    \r\n      \r\n      \r\n      \r\n        return (\r\n            <div className='cards'>\r\n                <div className='cards-inner'>\r\n                <div className=\"title\">\r\n                <img className=\"daoLogo\" src={unchainLogo} border={1} alt=\"Unchained\" ></img>\r\n\r\n               <h3>Unchain</h3>\r\n               \r\n               </div>\r\n               <div>Website: <a href=\"https://unchain.fund/\" target =\"blank\">https://www.unchain.fund</a></div>\r\n               <h4>Near Wallet: <a href=\"https://explorer.mainnet.near.org/accounts/unchain-fund.sputnik-dao.near\" target =\"blank\">unchain-fund.sputnik-dao.near</a></h4>\r\n               {eth}\r\n            \r\n               {dollar}\r\n               </div>\r\n               <div className=\"foot\">\r\n                <h4>  Unchain is raising funds to support Ukrainian people via NGO's. The goal is to help Ukraine become the country it deserves to be: peaceful and free.</h4>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true; \r\n       // this.loadBalance();\r\n        this.getDollarValue();\r\n       // this.getInternal();\r\n       \r\n             \r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default Unchained;","C:\\Users\\jfpad\\UkraineEth\\src\\Components\\UkraineGOV.js",["62","63","64"],"import { transactions } from 'near-api-js';\r\nimport React, { Component } from 'react';\r\nimport AnimatedNumber from 'react-animated-number';\r\nimport ukraineGovLogo from '../UkraineGov.jpg';\r\n\r\nimport {usdt_address, usdt_abi} from '../USDT';\r\n\r\n\r\n\r\nlet Web3 = require('web3');\r\n//const web3 = new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/80d02cdecda5428590656c7e420c7cba\"))\r\nconst web3 = new Web3(new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/fdcf7b76a5e04f598a89724994743046\"))\r\n\r\nlet numeral = require('numeral');\r\n\r\n\r\nclass UkraineGOV extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n          ethBalance:0,\r\n          tether:0,\r\n          bloackNumber:0,\r\n          dollarPerEth:0,\r\n          dollarValue:0,\r\n          usdtContract:[],\r\n\r\n          txUSDT:[],\r\n          spentUSDT:0,\r\n          spentEth:0,\r\n          totalEth:0,\r\n\r\n          totalDonation:0,\r\n\r\n\r\n          prevState:0,\r\n          prevEth:0,\r\n          prevUSDT:0,\r\n\r\n          scan:'ZPRBBU2E6Z4QMEXPI7BWMCMVK7I6XZ6ZXE',\r\n          address:'0x165CD37b4C644C2921454429E7F9358d18A45e14',\r\n          arrays:[],\r\n          sting:[],\r\n          transactions:0,\r\n          dollarEth:0,\r\n \r\n          \r\n        }\r\n    }\r\n    \r\n\r\nasync loadBalance(){\r\n    this.setState({prevEth:this.state.ethBalance,prevUSDT:this.state.tether,prevState:this.state.dollarValue},()=>console.log)\r\n    //https://api.blockcypher.com/v1/eth/main/addrs/0x165CD37b4C644C2921454429E7F9358d18A45e14/balance?token=bc6ad99ae7cc4b3ab4c28916c6644343 \r\n  fetch('https://api.blockcypher.com/v1/eth/main/addrs/0x165CD37b4C644C2921454429E7F9358d18A45e14/balance')\r\n  .then(res => res.json())\r\n  .then((data) => {\r\n     //console.log(data)\r\n\r\n    this.setState({ethBalance:data.balance/1000000000000000000, spentEth:data.total_sent/1000000000000000000,totalEth:data.total_received/1000000000000000000},()=>console.log()) \r\n    //this.setState({dollarValue:this.state.dollarPerbtc * this.state.btcBalance})\r\n   // this.setState({totalDonation:parseInt(this.state.dollarPerbtc) * parseInt(this.state.totalBTC)},()=>console.log()) \r\n     // this.handleBtc();\r\n  }\r\n  \r\n    )\r\n  .catch(console.log)\r\n//https://api.blockcypher.com/v1/eth/main/addrs/0x165CD37b4C644C2921454429E7F9358d18A45e14/balance\r\n\r\n   // let x = []\r\n    \r\n\r\n   \r\n\r\n\r\n    /*fetch('https://api.etherscan.io/api?module=account&action=txlist&address='+this.state.address+'&startblock=6&endblock=99999999&page=1&offset=10000&sort=asc&apikey='+this.state.scan)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n     \r\n        this.setState({sting:data.result},()=>console.log())\r\n        //0x7ec156c645945e512a45276e124b6f5f014b21a0\r\n      console.log(data.result)\r\n        x = this.state.sting.filter((address,i)=>{\r\n                   \r\n             return address.to === '0x77ab999d1e9f152156b4411e1f3e2a42dab8cd6d';\r\n         \r\n         })\r\n\r\n         for (var m = 0;m <= x.length -1; m++){\r\n            this.setState({transactions:this.state.transactions + parseInt(x[m].value)},()=>console.log())\r\n         }\r\n\r\n         this.setState({spentEth:this.state.transactions/1000000000000000000},()=>console.log())\r\n       \r\n         this.setState({dollarValue:this.state.dollarPerEth * this.state.ethBalance + this.state.tether},()=>console.log())\r\n         this.setState({totalDonation:this.state.dollarPerEth * this.state.spentEth + this.state.spentUSDT + this.state.dollarValue},()=>console.log()) \r\n         this.handleEth();\r\n        }\r\n\r\n    \r\n    )\r\n    .catch(console.log)*/\r\n\r\n    const balance = await web3.eth.getBalance(\"0x165CD37b4C644C2921454429E7F9358d18A45e14\");\r\n    const usdt = new web3.eth.Contract(usdt_abi, usdt_address);\r\n   // this.setState({ethBalance:web3.utils.fromWei(balance)},()=>console.log())\r\n\r\n    this.setState({usdtContract:usdt});\r\n\r\n\r\n    const usdtBal = await this.state.usdtContract.methods.balanceOf(\"0x165CD37b4C644C2921454429E7F9358d18A45e14\").call();\r\n    const usdtBalance = usdtBal;\r\n \r\n    this.setState({tether:usdtBalance/1000000},()=>console.log())\r\n\r\n    \r\n    if(this.state.spentUSDT === 0){\r\n    this.state.usdtContract.getPastEvents(\"Transfer\",{filter: {from:'0x165cd37b4c644c2921454429e7f9358d18a45e14'},fromBlock: 0, toBlock:'latest'})\r\n    .then(events=>{\r\n    var transactions = events;\r\n    let spent = 0\r\n    for (var i = 0; i <= transactions.length - 1; i++){\r\n      //spent + (transactions[].returnValues.value/1000000)\r\n      this.setState({spentUSDT:parseInt((this.state.spentUSDT + (transactions[i].returnValues.value/1000000)))},()=>console.log())\r\n  \r\n  }\r\n\r\n\r\n\r\n  //this.setState({dollarValue:this.state.dollarPerEth * this.state.ethBalance + this.state.tether},()=>console.log())\r\n // this.setState({totalDonation:this.state.dollarPerEth * this.state.totalEth + this.state.tether + this.state.spentUSDT},()=>console.log()) \r\n  setInterval(()=>this.total(),2000);\r\n  this.handleEth();\r\n\r\n  }).catch((err)=>console.error(err))\r\n}\r\n\r\n\r\n\r\n//if(this.state.totalDonation < 0){\r\n   \r\n \r\n   //this.total();\r\n  // this.handleEth();\r\n     \r\n}\r\n\r\n\r\ngetDollarValue(){\r\n\r\nfetch('https://api.coingecko.com/api/v3/simple/price?ids=ethereum&vs_currencies=usd')\r\n        .then(res => res.json())\r\n            .then((data) => {               \r\n                this.setState({dollarPerEth: data.ethereum.usd},()=>console.log())\r\n            }               \r\n              )\r\n              .catch(console.log)\r\n              setInterval(()=>this.loadBalance(),45000)\r\n}  \r\n\r\n\r\n\r\nasync getLogo(){\r\n\r\n       //fetch('https://api.coingecko.com/api/v3/coins/ethereum?localization=false&tickers=false&market_data=false&community_data=false&developer_data=false&sparkline=false')\r\n       \r\n        fetch('https://blockchain.info/rawaddr/357a3So9CbsNfBBgFYACGvxxS6tMaDoa1P?fbclid=IwAR2o5Ap0KIZTUCv7hnEscQppvIiZWKCHBvZrGsNuhJzWE30jSnfkLB_BuKQ')\r\n       .then(res => res.json())\r\n       .then((data) => {\r\n       //  this.setState({logo: data.image.small},()=>(console.log()))}\r\n       }\r\n       )\r\n       .catch(console.log)\r\n   \r\n     }\r\n\r\ntotal(){\r\n    this.setState({dollarValue:this.state.dollarPerEth * this.state.ethBalance + this.state.tether},()=>console.log())\r\n    this.setState({totalDonation:this.state.dollarPerEth * this.state.totalEth + this.state.tether + this.state.spentUSDT},()=>console.log()) \r\n    this.handleEth();\r\n}\r\n\r\nhandleEth = e => {\r\n    // if (this.props.onChange) {\r\n        this.props.onChange(this.state);\r\n               \r\n    };\r\n    \r\n\r\nround(value){\r\n    if (value){  \r\n        return numeral(this.state.ethBalance).format('0,0.00000000');        \r\n        }\r\n        \r\n    return 0;\r\n    }\r\n\r\n\r\nroundDollar(value){\r\n        if (value){  \r\n            return numeral(this.state.dollarValue).format('0,0.');      \r\n            }\r\n            \r\n        return 0;\r\n        }\r\n\r\nroundUsdt(value){\r\n    if (value){  \r\n         return numeral(this.state.tether).format('0,0.');      \r\n         }\r\n                \r\n    return 0;\r\n    }\r\n    \r\n\r\n    \r\n    render() {\r\n\r\n        let fontColor = 'rgb(154, 236, 87)';\r\n        if(this.state.prevEth < this.state.ethBalance && this.state.prevEth !== 0){\r\n            fontColor = 'rgb(117, 202, 47)';\r\n        }\r\n        else if(this.state.prevEth > this.state.ethBalance){\r\n            fontColor = 'rgba(230, 26, 60)';\r\n        }\r\n        else{\r\n            fontColor = 'rgb(240, 243, 237)';\r\n        }\r\n\r\n\r\n\r\n        let fontColor2 = 'rgb(154, 236, 87)';\r\n        if(this.state.prevState < this.state.dollarValue && this.state.prevState !== 0){\r\n            fontColor2 = 'rgb(117, 202, 47)';\r\n        }\r\n        else if(this.state.prevState > this.state.dollarValue){\r\n            fontColor2 = 'rgba(230, 26, 60)';\r\n        }\r\n        else{\r\n            fontColor2 = 'rgb(240, 243, 237)';\r\n        }\r\n\r\n\r\n\r\n        let fontColor3 = 'rgb(154, 236, 87)';\r\n        if(this.state.prevUSDT < this.state.tether && this.state.prevUSDT !== 0){\r\n            fontColor3 = 'rgb(117, 202, 47)';\r\n        }\r\n        else if(this.state.prevUSDT > this.state.tether){\r\n            fontColor3 = 'rgba(230, 26, 60)';\r\n        }\r\n        else{\r\n            fontColor3 = 'rgb(240, 243, 237)';\r\n        }\r\n\r\n\r\n\r\n        let eth =<p>Ether Balance: <AnimatedNumber component=\"text\" value={this.state.dollarValue} style={{\r\n            transition: '0.1s ease-out',\r\n            fontSize: 19,\r\n            cursor:'pointer',\r\n            transitionProperty:\r\n            'background-color, color, opacity'\r\n        }}frameStyle={perc => (\r\n            perc === 100 ? {} : {color: fontColor}\r\n        )}\r\n        duration={1500}\r\n        formatValue={n=>this.round(n)}></AnimatedNumber> ETH</p>;\r\n\r\n        \r\n        let usdt = <p>USDT Balance: $<AnimatedNumber component=\"text\" value={this.state.dollarValue} style={{\r\n            transition: '0.1s ease-out',\r\n            fontSize: 19,\r\n            cursor:'pointer',\r\n            transitionProperty:\r\n            'background-color, color, opacity'\r\n        }}frameStyle={perc => (\r\n            perc === 100 ? {} : {color: fontColor3}\r\n        )}\r\n        duration={1500}\r\n        formatValue={n=>this.roundUsdt(n)}></AnimatedNumber> </p>;\r\n        \r\n        \r\n        \r\n        let dollar = <p>Current Donation Value: $<AnimatedNumber component=\"text\" value={this.state.dollarValue} style={{\r\n            transition: '0.1s ease-out',\r\n            fontSize: 19,\r\n            cursor:'pointer',\r\n            transitionProperty:\r\n            'background-color, color, opacity'\r\n        }}frameStyle={perc => (\r\n            perc === 100 ? {} : {color: fontColor2}\r\n        )}\r\n        duration={1500}\r\n        formatValue={n=>this.roundDollar(n)}></AnimatedNumber> </p>;\r\n    \r\n      let total = <div>\r\n            <a href=\"https://etherscan.io/txs?a=0x165CD37b4C644C2921454429E7F9358d18A45e14&f=2\" target =\"blank\"> Moved:  {numeral(this.state.spentEth).format('0,0.00')} ETH</a>\r\n              <div> <a href=\"https://etherscan.io/txs?a=0x165CD37b4C644C2921454429E7F9358d18A45e14&f=2\" target =\"blank\"> ${numeral(this.state.spentUSDT).format('0,0.')} USDT</a></div>\r\n              <div> <a href=\"https://etherscan.io/txs?a=0x165CD37b4C644C2921454429E7F9358d18A45e14&f=2\" target =\"blank\">Total Donated Value: ${numeral(this.state.totalDonation).format('0,0.')} USDT</a></div>\r\n      </div>\r\n      \r\n      \r\n        return (\r\n            <div className='cards'>\r\n                <div className=\"title\">\r\n                <img className=\"daoLogo\" src={ukraineGovLogo} border={1} alt=\"UkraineDAO\" ></img>\r\n\r\n               <h3>Government of Ukraine</h3>\r\n               \r\n               </div>\r\n               <div>Website: <a href=\"https://twitter.com/Ukraine/status/1497594592438497282\" target =\"blank\">https://twitter.com/Ukraine</a></div>\r\n               <h4>Ethereum Wallet: <a href=\"https://etherscan.io/address/0x165CD37b4C644C2921454429E7F9358d18A45e14\" target =\"blank\">0x165CD37b4C644C2921454429E7F9358d18A45e14</a></h4>\r\n               {eth}\r\n               {usdt}\r\n               {dollar}\r\n                {total}\r\n\r\n               <div className=\"foot\">\r\n                <h4>The government of Ukraine is now accepting cryptocurrency donations. Bitcoin, Ethereum & USDT.</h4>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true; \r\n        this.loadBalance();\r\n        this.getDollarValue();\r\n      //  this.getLogo();\r\n       \r\n             \r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default UkraineGOV;","C:\\Users\\jfpad\\UkraineEth\\src\\USDT.js",[],"C:\\Users\\jfpad\\UkraineEth\\src\\Components\\Relief.js",[],"C:\\Users\\jfpad\\UkraineEth\\src\\Components\\Binance.js",["65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":13,"column":8,"nodeType":"72","messageId":"73","endLine":13,"endColumn":14},{"ruleId":"70","severity":1,"message":"74","line":18,"column":5,"nodeType":"72","messageId":"73","endLine":18,"endColumn":9},{"ruleId":"75","severity":1,"message":"76","line":115,"column":7,"nodeType":"77","endLine":115,"endColumn":50},{"ruleId":"70","severity":1,"message":"78","line":5,"column":9,"nodeType":"72","messageId":"73","endLine":5,"endColumn":21},{"ruleId":"70","severity":1,"message":"79","line":5,"column":23,"nodeType":"72","messageId":"73","endLine":5,"endColumn":31},{"ruleId":"70","severity":1,"message":"80","line":10,"column":7,"nodeType":"72","messageId":"73","endLine":10,"endColumn":11},{"ruleId":"70","severity":1,"message":"81","line":182,"column":13,"nodeType":"72","messageId":"73","endLine":182,"endColumn":17},{"ruleId":"70","severity":1,"message":"82","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":12},{"ruleId":"70","severity":1,"message":"83","line":34,"column":11,"nodeType":"72","messageId":"73","endLine":34,"endColumn":19},{"ruleId":"70","severity":1,"message":"84","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":22},{"ruleId":"70","severity":1,"message":"85","line":106,"column":11,"nodeType":"72","messageId":"73","endLine":106,"endColumn":18},{"ruleId":"70","severity":1,"message":"86","line":123,"column":9,"nodeType":"72","messageId":"73","endLine":123,"endColumn":14},{"ruleId":"70","severity":1,"message":"87","line":169,"column":13,"nodeType":"72","messageId":"73","endLine":169,"endColumn":23},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'banner' is defined but never used.","Identifier","unusedVar","'Web3' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component UkraineGOV_BTC must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'usdt_address' is defined but never used.","'usdt_abi' is defined but never used.","'web3' is assigned a value but never used.","'usdt' is assigned a value but never used.","'Flag' is defined but never used.","'keyStore' is assigned a value but never used.","'transactions' is defined but never used.","'balance' is assigned a value but never used.","'spent' is assigned a value but never used.","'fontColor2' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]